diff --git a/kernel/e1000.c b/kernel/e1000.c
index 70a2adf..4fe498b 100644
--- a/kernel/e1000.c
+++ b/kernel/e1000.c
@@ -95,26 +95,72 @@ e1000_init(uint32 *xregs)
 int
 e1000_transmit(struct mbuf *m)
 {
-  //
-  // Your code here.
-  //
+
   // the mbuf contains an ethernet frame; program it into
   // the TX descriptor ring so that the e1000 sends it. Stash
   // a pointer so that it can be freed after sending.
   //
+  // mbuf 包含一个以太网帧；将其编程到 TX 描述符环中，以便 e1000 发送它。保存一个指针，以便在发送后可以释放它。
+  
+  acquire(&e1000_lock);
+  
+  // 查询下一个 packet 的下标
+  int idx = regs[E1000_TDT];
+  
+  // 检查前一个传输是否完成
+  if (!(tx_ring[idx].status & E1000_TXD_STAT_DD)) {
+    release(&e1000_lock);
+    return -1; // 若未完成,返回错误
+  }
+  
+  // 释放上一个包的内存
+  if (tx_mbufs[idx])
+    mbuffree(tx_mbufs[idx]);
   
+  // 填充新的网络包信息到 ring 的下标位置
+  tx_mbufs[idx] = m;
+  tx_ring[idx].length = m->len;
+  tx_ring[idx].addr = (uint64) m->head;
+  tx_ring[idx].cmd = E1000_TXD_CMD_RS | E1000_TXD_CMD_EOP;
+  regs[E1000_TDT] = (idx + 1) % TX_RING_SIZE;
+
+  release(&e1000_lock);
   return 0;
 }
 
 static void
 e1000_recv(void)
 {
-  //
-  // Your code here.
-  //
+
   // Check for packets that have arrived from the e1000
   // Create and deliver an mbuf for each packet (using net_rx()).
   //
+  // 检查从 e1000 接收到的数据包
+  // 为每个数据包创建并传递一个 mbuf（使用 net_rx()）。
+  
+  while (1) {
+      // 获取描述符环中下一个待处理的描述符的索引
+    int idx = (regs[E1000_RDT] + 1) % RX_RING_SIZE;
+  
+    // 检查描述符的状态
+    if (!(rx_ring[idx].status & E1000_RXD_STAT_DD))
+      return; // 没有新包了，结束函数
+    
+    // 将数据包的长度设置到 mbuf 中
+    rx_mbufs[idx]->len = rx_ring[idx].length;
+    
+    // 向上层网络栈传输
+    // net_rx定义在net.c中，作用：将从网络接收到的数据包交给网络协议栈进行处理。在操作系统中，数据包从网络接口卡（如网卡）接收后，需要进行一系列的处理，包括解析协议头、路由选择、处理传输层协议（如 TCP、UDP）等操作。
+    net_rx(rx_mbufs[idx]);
+    
+    if((rx_mbufs[idx] = mbufalloc(0)) == 0)
+      panic("e1000");
+    rx_ring[idx].status = 0;
+    rx_ring[idx].addr = (uint64) rx_mbufs[idx]->head;
+  
+    // 更新待处理描述符的索引
+    regs[E1000_RDT] = idx;
+    }
 }
 
 void
@@ -123,6 +169,8 @@ e1000_intr(void)
   // tell the e1000 we've seen this interrupt;
   // without this the e1000 won't raise any
   // further interrupts.
+  
+  // 告诉 e1000 我们已经看到了这个中断
   regs[E1000_ICR] = 0xffffffff;
 
   e1000_recv();
diff --git a/packets.pcap b/packets.pcap
index 82d353e..43f88c9 100644
Binary files a/packets.pcap and b/packets.pcap differ
diff --git a/time.txt b/time.txt
new file mode 100644
index 0000000..b8626c4
--- /dev/null
+++ b/time.txt
@@ -0,0 +1 @@
+4
